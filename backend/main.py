from fastapi import FastAPI, Request
from fastapi.responses import JSONResponse
import os
from dotenv import load_dotenv
from datetime import datetime
import openai
import json
import asyncio
import sys

# –î–æ–±–∞–≤–ª—è–µ–º app/ –≤ –ø—É—Ç—å, —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å bot.py
sys.path.append(os.path.join(os.path.dirname(__file__), "..", "app"))
from bot import start_bot  # —Ñ—É–Ω–∫—Ü–∏—è, –∑–∞–ø—É—Å–∫–∞—é—â–∞—è Telegram-–±–æ—Ç–∞

load_dotenv()

app = FastAPI()
openai.api_key = os.getenv("OPENAI_API_KEY")


@app.on_event("startup")
async def on_startup():
    print("üöÄ Starting FastAPI and Telegram bot...")
    asyncio.create_task(start_bot())


@app.post("/process_message")
async def process_message(request: Request):
    try:
        body = await request.json()
        user_text = body.get("text")
        now = body.get("now")

        print(f"üì© Received message: {user_text}")
        print(f"üïí Current time: {now}")

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ OpenAI
        prompt = f"""
–¢—ã ‚Äî –ø–æ–º–æ—â–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –∑–∞–¥–∞—á—É –∏ –µ—ë –¥–∞—Ç—É/–≤—Ä–µ–º—è.

–°–µ–≥–æ–¥–Ω—è: {now}
–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: "{user_text}"

–û—Ç–≤–µ—Ç—å —Å—Ç—Ä–æ–≥–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON:
{{
    "date": "YYYY-MM-DD",
    "time": "HH:MM",
    "task": "–∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏"
}}

–ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å, –≤–µ—Ä–Ω–∏:
{{ "error": "–û—à–∏–±–∫–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è" }}
"""

        response = openai.chat.completions.create(
            model="gpt-4o",
            messages=[{"role": "user", "content": prompt}],
            temperature=0.2
        )

        result = response.choices[0].message.content.strip()
        print(f"‚úÖ Parsed response: {result}")
        return {"response": result}

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ OpenAI: {e}")
        return JSONResponse(content={"error": f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ OpenAI: {e}"}, status_code=500)